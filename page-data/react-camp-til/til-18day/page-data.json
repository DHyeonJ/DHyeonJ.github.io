{"componentChunkName":"component---src-templates-blog-template-js","path":"/react-camp-til/til-18day/","result":{"data":{"cur":{"id":"45862e44-c3cc-5b7e-8f9f-5b47d4f0f430","html":"<blockquote>\n<h2 id=\"개인과제를-시작하기-전\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9D%B8%EA%B3%BC%EC%A0%9C%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A0%84\" aria-label=\"개인과제를 시작하기 전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개인과제를 시작하기 전</h2>\n<ul>\n<li>개인과제를 시작 전에는 너무 막막하고 걱정을 많이 했지만, 걱정하면 아무것도 못한다는 생각에 메인 페이지 화면 구상하면서 시작해보았습니다!</li>\n</ul>\n</blockquote>\n<br>\n<blockquote>\n<h2 id=\"개인과제를-진행하면서\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9D%B8%EA%B3%BC%EC%A0%9C%EB%A5%BC-%EC%A7%84%ED%96%89%ED%95%98%EB%A9%B4%EC%84%9C\" aria-label=\"개인과제를 진행하면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개인과제를 진행하면서</h2>\n<ul>\n<li>아직 배워야하고 이해 해야할 것들이 너무 많다라는 것을 느꼈습니다.</li>\n</ul>\n</blockquote>\n<br>\n<blockquote>\n<h2 id=\"개인과제를-마치고-나서\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9D%B8%EA%B3%BC%EC%A0%9C%EB%A5%BC-%EB%A7%88%EC%B9%98%EA%B3%A0-%EB%82%98%EC%84%9C\" aria-label=\"개인과제를 마치고 나서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개인과제를 마치고 나서</h2>\n<ul>\n<li>개인 과제 끝났다고 긴장 풀지 말고 다시 차근차근 공부를 해야겠다고 생각을 많이 했습니다.</li>\n</ul>\n</blockquote>\n<br>\n<h2 id=\"시연\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%97%B0\" aria-label=\"시연 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시연</h2>\n<p><img src=\"/6d0a60b7ccdd516a0b0facaababca81c/til-5day-video.gif\" alt=\"img/til-5day-video.gif\"></p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B0%9C%EC%9D%B8%EA%B3%BC%EC%A0%9C%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A0%84\">개인과제를 시작하기 전</a></li>\n<li><a href=\"#%EA%B0%9C%EC%9D%B8%EA%B3%BC%EC%A0%9C%EB%A5%BC-%EC%A7%84%ED%96%89%ED%95%98%EB%A9%B4%EC%84%9C\">개인과제를 진행하면서</a></li>\n<li><a href=\"#%EA%B0%9C%EC%9D%B8%EA%B3%BC%EC%A0%9C%EB%A5%BC-%EB%A7%88%EC%B9%98%EA%B3%A0-%EB%82%98%EC%84%9C\">개인과제를 마치고 나서</a></li>\n<li><a href=\"#%EC%8B%9C%EC%97%B0\">시연</a></li>\n</ul>\n</div>","excerpt":"개인과제를 시작하기 전 개인과제를 시작 전에는 너무 막막하고 걱정을 많이 했지만, 걱정하면 아무것도 못한다는 생각에 메인 페이지 화면 구상하면서 시작해보았습니다! 개인과제를 진행하면서 아직 배워야하고 이해 해야할 것들이 너무 많다라는 것을 느꼈습니다. 개인과제를 마치고 나서 개인 과제 끝났다고 긴장 풀지 말고 다시 차근차근 공부를 해야겠다고 생각을 많이 했습니다. 시연 img/til-5day-video.gif 개인과제를 시작하기 전 개인과제를 진행하면서 개인과제를 마치고 나서 시연","frontmatter":{"date":"June 16, 2023","title":"개인과제 마무리","categories":"내일배움캠프","author":"DHyeonJ","emoji":"📝"},"fields":{"slug":"/react-camp-til/til-18day/"}},"next":{"id":"610f1f40-8c75-52e2-8283-6e006cc3fab9","html":"<h2 id=\"component\" style=\"position:relative;\"><a href=\"#component\" aria-label=\"component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component</h2>\n<h3 id=\"react-component란\" style=\"position:relative;\"><a href=\"#react-component%EB%9E%80\" aria-label=\"react component란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Component란?</h3>\n<blockquote>\n컴포넌트를 통해 UI를 재사용이 가능한 `개별적인 여러 조각`으로 나누고, 각 조각을 개별적으로 살펴볼 수 있다.\n개념적으로 컴포넌트는 `JavaScript 함수`와 유사하다.\n\"props\"라고 하는 임의의 `입력`을 받은 후, `화면에 어떻게 표시`되는지를 기술하는 `React 엘리먼트를 반환`한다.\n</blockquote>\n<h3 id=\"react-컴포넌트를-표현하는-두-가지-방법\" style=\"position:relative;\"><a href=\"#react-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%ED%91%9C%ED%98%84%ED%95%98%EB%8A%94-%EB%91%90-%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\" aria-label=\"react 컴포넌트를 표현하는 두 가지 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 컴포넌트를 표현하는 두 가지 방법</h3>\n<ol>\n<li>함수형 컴포넌트</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// props라는 입력을 받음</span>\n<span class=\"token comment\">// 화면에 어떻게 표현되는지를 기술하는 React 엘리먼트를 반환</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 쉬운 표현으로 변경하면 아래와 같다.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>hello<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"2\">\n<li>클래스형 컴포넌트</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"component-보는-방법\" style=\"position:relative;\"><a href=\"#component-%EB%B3%B4%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"component 보는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component 보는 방법</h3>\n<ul>\n<li>코드를 볼 때는 영역을 나누어서 보면 조금 더 편하다.</li>\n<li>컴포넌트 밖에서는 내가 필요한 파일을 import하거나, 또는 export default라는 기능을 통해 내가 만든 컴포넌트를 밖으로 내보내는 코드가 있다.</li>\n<li>컴포넌트 안에서는 자바스크립트를 쓸 수 있는 부분이 있다.</li>\n<li>retur을 기준으로 아래부분에서는 Jsx(=HTML)을 작성할 수 있다. <code class=\"language-text\">작성된 HTML 코드와 값들이 화면에 보여진다.</code></li>\n</ul>\n<h2 id=\"jsx\" style=\"position:relative;\"><a href=\"#jsx\" aria-label=\"jsx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX</h2>\n<h3 id=\"jsx란\" style=\"position:relative;\"><a href=\"#jsx%EB%9E%80\" aria-label=\"jsx란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX란?</h3>\n<ul>\n<li><code class=\"language-text\">JavaScript + XML</code>로 Js안에 HTML 태그를 사용할 수 있다.</li>\n<li>JSX문법을 사용해서 React 요소를 만들고 DOM에 렌더링 시켜서 그린다.</li>\n</ul>\n<h3 id=\"jsx-실습\" style=\"position:relative;\"><a href=\"#jsx-%EC%8B%A4%EC%8A%B5\" aria-label=\"jsx 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX 실습</h3>\n<ol>\n<li>\n<p>태그는 꼭 닫아야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>무조건 1개의 엘리먼트를 반환하기</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n     <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>안녕하세요<span class=\"token operator\">!</span> 리액트입니다<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>JSX에서 javascript를 사용하려면</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cat_name <span class=\"token operator\">=</span> <span class=\"token string\">'perl'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>hello <span class=\"token punctuation\">{</span>cat_name<span class=\"token punctuation\">}</span><span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Class 대신 className</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>JSX로 작성하는 태그 내에서 클래스 명을 정해줄 땐 속성 값을 className으로 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span></code></pre></div>\n</li>\n</ul>\n<ol start=\"5\">\n<li>인라인으로 style주기</li>\n</ol>\n<ul>\n<li>css문법 대신 json 형식으로 작성하면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>orange<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token string\">'20px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">orange</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 스타일 객체를 변수로 만들고 사용이 가능하다.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token string\">'20px'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">orange</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#component\">Component</a></p>\n<ul>\n<li><a href=\"#react-component%EB%9E%80\">React Component란?</a></li>\n<li><a href=\"#react-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%ED%91%9C%ED%98%84%ED%95%98%EB%8A%94-%EB%91%90-%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\">React 컴포넌트를 표현하는 두 가지 방법</a></li>\n<li><a href=\"#component-%EB%B3%B4%EB%8A%94-%EB%B0%A9%EB%B2%95\">Component 보는 방법</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#jsx\">JSX</a></p>\n<ul>\n<li><a href=\"#jsx%EB%9E%80\">JSX란?</a></li>\n<li><a href=\"#jsx-%EC%8B%A4%EC%8A%B5\">JSX 실습</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 13, 2023","title":"React 입문(Component, JSX)","categories":"내일배움캠프","author":"DHyeonJ","emoji":"📝"},"fields":{"slug":"/react-camp-til/til-15day/"}},"prev":{"id":"a07f560a-84fa-5163-b6b6-51f8f6135731","html":"<h1 id=\"기분에-따른-음식-추천\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B6%84%EC%97%90-%EB%94%B0%EB%A5%B8-%EC%9D%8C%EC%8B%9D-%EC%B6%94%EC%B2%9C\" aria-label=\"기분에 따른 음식 추천 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기분에 따른 음식 추천</h1>\n<ul>\n<li>설문을 통해 가장 많이 나온 기분에 대한 음식을 추천해주기 위해서 최빈 값을 구한다.</li>\n</ul>\n<h2 id=\"js-map-객체\" style=\"position:relative;\"><a href=\"#js-map-%EA%B0%9D%EC%B2%B4\" aria-label=\"js map 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Js Map 객체</h2>\n<ul>\n<li>\n<p>ES6부터 새로 도입된 개념이다. 키와 값을 연결하기 위해 사용하는 데이터 유형이다. 프로토 타입은 <code class=\"language-text\">Object</code>.</p>\n<ul>\n<li>기존 객체와 달리 다양한 타입, 심지어 객체로도 키를 설정할 수 있다.</li>\n<li>객체와 달리 자료를 반복할 수 있어 <code class=\"language-text\">for-of</code>나 스프레드 연산자를 사용 가능하다.</li>\n<li>배열처럼 삽입된 순서나 크기를 구하기 쉽다.</li>\n<li>실행 시까지 키를 알 수 없고, 모든 키와 값들이 동일한 type일 경우 사용하기를 추천한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"메서드\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메서드</h2>\n<ul>\n<li><code class=\"language-text\">new Map()</code> : 일반 생성자 함수와 같이 변수처럼 사용 가능하다.</li>\n<li><code class=\"language-text\">map.set(key, value)</code> : 객체와 비슷하게 키와 값을 한 번에 선언할 수 있다.</li>\n<li><code class=\"language-text\">map.get(key)</code> : 객체와 비슷하게 인자에 키를 넣어 값이나 Undefined를 반환한다.</li>\n<li><code class=\"language-text\">map.has(key)</code> : 데이터 존재 유무를 Boolean 값으로 반환한다.</li>\n<li><code class=\"language-text\">map.delete(key)</code> : 키로 값을 제거한다.</li>\n<li><code class=\"language-text\">map.clear()</code> : 모든 데이터를 삭제할 수 있다.</li>\n<li><code class=\"language-text\">map.size</code> : 데이터 갯수를 반환한다.</li>\n<li><code class=\"language-text\">map.keys()</code> : <code class=\"language-text\">iterable</code>키에 대해 반복 가능한 값을 반환한다.</li>\n<li><code class=\"language-text\">map.values()</code> : <code class=\"language-text\">iterable</code> 값에 대해 반복 가능한 값을 반환한다.</li>\n<li><code class=\"language-text\">map.entries</code>: <code class=\"language-text\">iterable</code>객체로 반환되며 각 값은 [key, value] 형태이다.</li>\n<li><code class=\"language-text\">map.next()</code> : entries 메소드로 반환된 이터러블 객체 뒤에 활용돼 순차적으로 value, done 프로퍼트 제공.</li>\n</ul>\n<h2 id=\"코드에-적용해보기\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"코드에 적용해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드에 적용해보기</h2>\n<p>// Map은 key와 value로 이루어진 자료구조.\n// Map은 순서가 중요하지 않다.\n// Map에서 key는 유일한 key를 가지고 있어야 한다.\n// Map은 Obj와 비슷하다.</p>\n<p>// const Array = [1 ,2, 3, 2,3, 2]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">modeEmotion</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> modeArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// modeArr :초 Map(0){} 기에 map자료 구조만 설정해줘서 빈 맵 자료 구조로 출력</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> n <span class=\"token keyword\">of</span> Array<span class=\"token punctuation\">)</span> modeArr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>modeArr<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 변수 n이 배열만큼 for문 돌면서 ModeArr map구조에 set(N, (modeArr.get(N) || 0) +1)를 해준다...?)</span>\n<span class=\"token comment\">// array[0]</span>\nmodeArr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>  modeArr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token string\">'1'</span><span class=\"token operator\">=></span><span class=\"token string\">'1'</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//array[1]  modeArr.set(1,1)</span>\nmodeArr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>  modeArr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token string\">'1'</span><span class=\"token operator\">=></span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span> <span class=\"token operator\">=></span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">}</span> modeArr<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token comment\">//array[2] modeArr.set(2,1) => {'1'=>'1', '2' => '1'} modeArr.get(2) 1 get(1) 1</span>\nmodeArr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> modeArr<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token string\">'1'</span><span class=\"token operator\">=></span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span> <span class=\"token operator\">=></span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token operator\">=></span><span class=\"token string\">'1'</span><span class=\"token punctuation\">}</span>  modeArr<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n<span class=\"token comment\">//array[3]</span>\nmodeArr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">||</span> 앞에 있을 때 <span class=\"token boolean\">false</span>면 넘어간다<span class=\"token punctuation\">.</span>\nmodeArr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token string\">'1'</span><span class=\"token operator\">=></span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span> <span class=\"token operator\">=></span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token operator\">=></span><span class=\"token string\">'1'</span> <span class=\"token punctuation\">}</span>   modeArr<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span> <span class=\"token operator\">/</span>  <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token comment\">// 같은 경우에는 새로운 값으로 저장된다.</span>\n<span class=\"token comment\">//array[4]</span>\n\n<span class=\"token comment\">//array[5]</span>\n\n\n  modeArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>modeArr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> modeArr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#js-map-%EA%B0%9D%EC%B2%B4\">Js Map 객체</a></li>\n<li><a href=\"#%EB%A9%94%EC%84%9C%EB%93%9C\">메서드</a></li>\n<li><a href=\"#%EC%BD%94%EB%93%9C%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0\">코드에 적용해보기</a></li>\n</ul>\n</div>\n<p>let modeArr = new Map()\nconsole.log(modeArr); // Map(0){}</p>\n<p>modeArr.set(‘1’, ‘1’)\nconsole.log(modeArr); // Map(1) { ‘1’ => ‘1’ }</p>\n<p>modeArr.set(‘react’, ‘어려워요’)\nconsole.log(modeArr); // Map(2) { ‘1’ => ‘1’ , ‘react’ => ‘어려워요’ }</p>\n<p>modeArr.set(‘2’, ‘1’)\nconsole.log(modeArr); // Map(2) { ‘1’ => ‘1’ , ‘react’ => ‘어려워요’ , ‘2’ => ‘1’}</p>\n<p>modeArr.set(‘2’, ‘1’) // 중복될 경우에는 같은 것들이 합쳐져서 하나만 출력\nconsole.log(modeArr); // Map(2) { ‘1’ => ‘1’ , ‘react’ => ‘어려워요’ , ‘2’ => ‘1’}</p>\n<p>// 가져올 때\nconst result = modeArr.get(1)\nconsole.log(result) // 1</p>\n<p>const result2 = modeArr.get(2)\nconsole.log(result2) // 1</p>","frontmatter":{"date":"July 19, 2023","title":"JS 최빈값 Map 객체 활용","categories":"내일배움캠프","author":"DHyeonJ","emoji":"📝"},"fields":{"slug":"/react-camp-til/til-41day/"}},"site":{"siteMetadata":{"siteUrl":"https://dhyeonj.github.io","comments":{"utterances":{"repo":"DHyeonJ/DHyeonJ.github.io"}}}}},"pageContext":{"slug":"/react-camp-til/til-18day/","nextSlug":"/react-camp-til/til-15day/","prevSlug":"/react-camp-til/til-41day/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}