{"componentChunkName":"component---src-templates-blog-template-js","path":"/react-camp-til/til-65day/","result":{"data":{"cur":{"id":"46757b26-9706-5908-b4c7-c8eb450ac31d","html":"<h1 id=\"기술면접redux이외의-전역상태관리---recoil\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%88%A0%EB%A9%B4%EC%A0%91redux%EC%9D%B4%EC%99%B8%EC%9D%98-%EC%A0%84%EC%97%AD%EC%83%81%ED%83%9C%EA%B4%80%EB%A6%AC---recoil\" aria-label=\"기술면접redux이외의 전역상태관리   recoil permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기술면접(Redux이외의 전역상태관리 - Recoil)</h1>\n<h2 id=\"redux외-다른-전역-상태-관리\" style=\"position:relative;\"><a href=\"#redux%EC%99%B8-%EB%8B%A4%EB%A5%B8-%EC%A0%84%EC%97%AD-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC\" aria-label=\"redux외 다른 전역 상태 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux외 다른 전역 상태 관리</h2>\n<ul>\n<li>\n<p>Redux를 제외하고 많은 전역 상태 관리들이 존재하지만 <code class=\"language-text\">Recoil</code>에 대해 알아보려고 한다.</p>\n<ul>\n<li><code class=\"language-text\">Recoil</code> : Facebook에서 개발한 React 상태 관리 라이브러리로, 컴포넌트 간에 상태를 공유하고 관리하기 위한 강력한 기능을 제공한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"redux와-recoil의-차이점\" style=\"position:relative;\"><a href=\"#redux%EC%99%80-recoil%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"redux와 recoil의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux와 Recoil의 차이점</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Redux</th>\n<th>Recoil</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>접근 방식과 복잡성</td>\n<td>Redux는 액션, 리듀서, 스토어 등의 개념을 사용하여 엄격한 단방향 데이터 흐름을 구현합니다. 이에 따라 초기 학습 곡선이 높을 수 있습니다.</td>\n<td>Recoil은 컴포넌트 기반 아키텍처에 더 가까운 방식으로 동작합니다. 원자와 선택기를 사용하여 비교적 직관적인 코드를 작성할 수 있으며, 초기 학습 곡선이 Redux보다 낮을 수 있습니다.</td>\n</tr>\n<tr>\n<td>데이터 흐름</td>\n<td>Redux는 엄격한 단방향 데이터 흐름을 강조하며, 상태 변화를 불변 객체를 통해 관리하고 액션-리듀서 구조로 데이터 흐름을 제어합니다.</td>\n<td>Recoil은 더 유연한 양방향 데이터 흐름을 가질 수 있어서 상태 간의 관계가 복잡한 상황에서 유용할 수 있습니다.</td>\n</tr>\n<tr>\n<td>보일러플레이트 코드</td>\n<td>Redux는 액션 생성자, 리듀서 등을 작성해야 하며, 보일러플레이트 코드가 많을 수 있습니다.</td>\n<td>Recoil은 보일러플레이트 코드를 상대적으로 줄일 수 있습니다. 원자와 선택기를 사용하여 간단하고 직관적인 코드를 작성할 수 있습니다.</td>\n</tr>\n<tr>\n<td>데이터 변화 처리</td>\n<td>불변성을 유지하면서 상태를 업데이트하는 방식으로 작동하며, 미들웨어를 통해 상태 변화를 제어할 수 있습니다.</td>\n<td>상태 변화를 불변성을 유지하면서 처리하며, React의 컴포넌트 렌더링 시스템과 조화를 이루도록 설계되었습니다.</td>\n</tr>\n<tr>\n<td>비동기 지원</td>\n<td>비동기 작업을 처리하기 위해 Redux Thunk, Redux Saga 등의 미들웨어를 사용해야 합니다.</td>\n<td>Recoil은 비동기 지원을 내장하고 있어 비동기 데이터 흐름을 간단하게 다룰 수 있습니다.</td>\n</tr>\n<tr>\n<td>개발 및 커뮤니티</td>\n<td>Redux는 React와 함께 많이 사용되며, 강력한 생태계와 다양한 미들웨어/도구 지원이 있습니다.</td>\n<td>Recoil도 React와 사용할 수 있지만, Redux만큼 널리 사용되지는 않으며, 생태계나 커뮤니티 규모는 Redux보다는 작을 수 있습니다.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#redux%EC%99%B8-%EB%8B%A4%EB%A5%B8-%EC%A0%84%EC%97%AD-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC\">Redux외 다른 전역 상태 관리</a></li>\n<li><a href=\"#redux%EC%99%80-recoil%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\">Redux와 Recoil의 차이점</a></li>\n</ul>\n</div>","excerpt":"기술면접(Redux이외의 전역상태관리 - Recoil) Redux외 다른 전역 상태 관리 Redux를 제외하고 많은 전역 상태 관리들이 존재하지만 에 대해 알아보려고 한다.  : Facebook에서 개발한 React 상태 관리 라이브러리로, 컴포넌트 간에 상태를 공유하고 관리하기 위한 강력한 기능을 제공한다. Redux와 Recoil의 차이점  Redux Recoil 접근 방식과 복잡성 Redux는 액션, 리듀서, 스토어 등의 개념을 사용하여 엄격한 단방향 데이터 흐름을 구현합니다. 이에 따라 초기 학습 곡선이 높을 수 있습니다. Recoil은 컴포넌트 기반 아키텍처에 더 가까운 방식으로 동작합니다. 원자와 선택기를 사용하여 비교적 직관적인 코드를 작성할 수 있으며, 초기 학습 곡선이 Redux보다 낮을 수 있습니다. 데이터 흐름 Redux는 엄격한 단방향 데이터 흐름을 강조하며, 상태 변화를 불변 객체를 통해 관리하고 액션-리듀서 구조로 데이터 흐름을 제어합니다. Recoil은 …","frontmatter":{"date":"August 23, 2023","title":"기술면접(Redux이외의 전역상태관리 - Recoil)","categories":"내일배움캠프","author":"DHyeonJ","emoji":"📝"},"fields":{"slug":"/react-camp-til/til-65day/"}},"next":{"id":"733f28d2-beb7-52d5-89de-3bddd53e804b","html":"<h1 id=\"기술면접redux가-무엇이고-사용하는-이유\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%88%A0%EB%A9%B4%EC%A0%91redux%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EA%B3%A0-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"기술면접redux가 무엇이고 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기술면접(Redux가 무엇이고 사용하는 이유)</h1>\n<h2 id=\"redux란\" style=\"position:relative;\"><a href=\"#redux%EB%9E%80\" aria-label=\"redux란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux란?</h2>\n<ul>\n<li><code class=\"language-text\">리덕스(Redux)</code>는 JavaScript 애플리케이션의 전역 상태 관리를 위한 라이브러리입니다. 리액트(React)와 함께 많이 사용되며, 복잡한 상태를 효율적으로 관리하고 예측 가능한 데이터 흐름을 구현하는 데 도움을 줍니다. 주요 개념과 동작 방식은 다음과 같습니다.</li>\n</ul>\n<h2 id=\"redux-주요개념\" style=\"position:relative;\"><a href=\"#redux-%EC%A3%BC%EC%9A%94%EA%B0%9C%EB%85%90\" aria-label=\"redux 주요개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux 주요개념</h2>\n<ol>\n<li>\n<p><code class=\"language-text\">Store</code> : 애플리케이션의 전역 상태가 저장되는 곳으로, 앱 내부 어디에서나 접근 가능한 중앙 데이터 저장소입니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Action</code> : 상태 변화를 나타내는 객체입니다. 어떤 변화가 필요한지를 나타내며, 타입(type)과 데이터(payload)로 구성됩니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">리듀서(Reducer)</code> : 액션의 타입을 기반으로 상태를 어떻게 변화시킬지 정의하는 함수입니다. 이전 상태와 액션을 받아 새로운 상태를 반환합니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">디스패치(Dispatch)</code> : 액션을 발생시켜 상태 변화를 일으키는 메소드입니다. 디스패치된 액션은 리듀서에 의해 처리되어 상태가 업데이트됩니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">구독(Subscribe)</code> : 스토어의 상태가 변경될 때마다 호출되는 함수를 등록하는 메소드입니다. 상태 변경을 감지하고 반응하는 데 사용됩니다.</p>\n</li>\n</ol>\n<h2 id=\"redux를-사용하는-이유\" style=\"position:relative;\"><a href=\"#redux%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"redux를 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux를 사용하는 이유</h2>\n<ul>\n<li>리덕스를 사용하면 컴포넌트의 상태 업데이트 관련 로직을 다른 파일로 분리시켜서 더욱 효율적으로 관리할 수 있습니다. 모든 상태 업데이트를 액션으로 정의하고, 액션 정보에 기반하여 리듀서에서 상태를 업데이트하는 이 간단명료한 발상 덕분에, 상태를 더욱 쉽게 예측 가능하게 하여 유지보수 측면에 긍정적인 효과가 있다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#redux%EB%9E%80\">Redux란?</a></li>\n<li><a href=\"#redux-%EC%A3%BC%EC%9A%94%EA%B0%9C%EB%85%90\">Redux 주요개념</a></li>\n<li><a href=\"#redux%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\">Redux를 사용하는 이유</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 22, 2023","title":"기술면접(Redux가 무엇이고 사용하는 이유)","categories":"내일배움캠프","author":"DHyeonJ","emoji":"📝"},"fields":{"slug":"/react-camp-til/til-64day/"}},"prev":{"id":"3d5cc064-c551-5a28-a61a-0063252ff24a","html":"<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>문자열 <code class=\"language-text\">str</code>이 주어질 때, <code class=\"language-text\">str</code>을 출력하는 코드를 작성해 보세요.</p>\n<h2 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h2>\n<ul>\n<li>1 ≤ <code class=\"language-text\">str</code>의 길이 ≤ 1,000,000</li>\n<li><code class=\"language-text\">str</code>에는 공백이 없으며, 첫째 줄에 한 줄로만 주어집니다.</li>\n</ul>\n<h2 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h2>\n<p><code class=\"language-text\">입력 #1</code></p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">HelloWorld!</code></pre></div>\n<p><code class=\"language-text\">출력 #1</code></p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">HelloWorld!</code></pre></div>\n<h2 id=\"코드\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> readline <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readline'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rl <span class=\"token operator\">=</span> readline<span class=\"token punctuation\">.</span><span class=\"token function\">createInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">input</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nrl<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">line</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  input <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'close'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  str <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"js-문법\" style=\"position:relative;\"><a href=\"#js-%EB%AC%B8%EB%B2%95\" aria-label=\"js 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JS 문법</h2>\n<h3 id=\"readline-모듈\" style=\"position:relative;\"><a href=\"#readline-%EB%AA%A8%EB%93%88\" aria-label=\"readline 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>readline 모듈</h3>\n<ul>\n<li>JS내장된 모듈로 한 줄씩 입출력을 처리할 수 있게 도와준다.</li>\n</ul>\n<h4 id=\"모듈-불러오기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"모듈 불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 불러오기</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> readline <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readline'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"readline-interface-객체-만들기\" style=\"position:relative;\"><a href=\"#readline-interface-%EA%B0%9D%EC%B2%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"readline interface 객체 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>readline interface 객체 만들기</h4>\n<ul>\n<li>정의한 변수를 이용해 readline 인터페이스 객체를 하나 만들어줍니다.</li>\n<li>readline interface 객체를 이용해 콘솔에서 표준 입출력을 처리할 수 있습니다.</li>\n<li>creacteInterface()메서드를 이용해 객체를 만들고, rl 변수에 저장해줍니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// createInterface()메서드</span>\n<span class=\"token keyword\">const</span> rl <span class=\"token operator\">=</span> readline<span class=\"token punctuation\">.</span><span class=\"token function\">createInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// readline.Interface 인스턴스를 생성함</span>\n  <span class=\"token literal-property property\">input</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">,</span> <span class=\"token comment\">// process.stdin: 입력 스트림</span>\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">,</span> <span class=\"token comment\">// process.stdout: 출력 스트림</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"on-메소드\" style=\"position:relative;\"><a href=\"#on-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"on 메소드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>on 메소드</h3>\n<ul>\n<li>생성한 변수 rl 객체로 입출력과 관련된 여러 이벤트 처리를 할 수 있습니다.</li>\n<li>예를 들어 사용자가 콘솔에 입력을 넣는 것과 같은 이벤트가 있습니다.</li>\n<li>on메소드를 이용하면 이벤트가 발생할 때 실행할 동작을 지정할 수 있습니다.</li>\n</ul>\n<h3 id=\"line-이벤트\" style=\"position:relative;\"><a href=\"#line-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"line 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>line 이벤트</h3>\n<ul>\n<li>readline interface를 통해 다룰 이벤트는 ‘Line’이벤트로 사용자가 콘솔에 입력을 할 때 발생합니다.</li>\n<li>입력 이벤트는 입력 스트림에 줄바꿈을 나타내는 \\n, \\r, \\r\\n 제어문자가 나타나거나, 사용자가 Enter 또는 Return을 누를 때 발생합니다.</li>\n</ul>\n<h3 id=\"close-이벤트\" style=\"position:relative;\"><a href=\"#close-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"close 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>close 이벤트</h3>\n<ul>\n<li>‘close’이벤트는 readable 스트림 종료를 제어하는 이벤트이며, ‘line’이벤트와 비슷한 형태로 작성합니다.</li>\n<li>더 이상 입력받을 것이 없을 때 rl.close()를 호출하여 발생시킵니다.</li>\n<li>‘line’이벤트와 함께 아래와 같이 사용됩니다.</li>\n</ul>\n<h3 id=\"rl-변수\" style=\"position:relative;\"><a href=\"#rl-%EB%B3%80%EC%88%98\" aria-label=\"rl 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rl 변수</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">rl<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">line</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 입력 부분</span>\n  input <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'close'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 출력 부분</span>\n  str <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"코드-해설\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%ED%95%B4%EC%84%A4\" aria-label=\"코드 해설 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 해설</h2>\n<p><code class=\"language-text\">입력 부분</code></p>\n<ul>\n<li>한줄씩 입력 받은 후 line에 값이 저장된다.</li>\n<li>input 배열에 line을 저장한다.</li>\n</ul>\n<p><code class=\"language-text\">출력 부분</code></p>\n<ul>\n<li>input 배열에 저장되어 있는 인덱스 0번을 str이라는 변수에 선언한다.</li>\n<li>console.log 를 통해 str에 저장된 문자열을 출력한다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%AC%B8%EC%A0%9C\">문제</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\">제한사항</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\">입출력 예</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C\">코드</a></p>\n</li>\n<li>\n<p><a href=\"#js-%EB%AC%B8%EB%B2%95\">JS 문법</a></p>\n<ul>\n<li>\n<p><a href=\"#readline-%EB%AA%A8%EB%93%88\">readline 모듈</a></p>\n<ul>\n<li><a href=\"#%EB%AA%A8%EB%93%88-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\">모듈 불러오기</a></li>\n<li><a href=\"#readline-interface-%EA%B0%9D%EC%B2%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\">readline interface 객체 만들기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#on-%EB%A9%94%EC%86%8C%EB%93%9C\">on 메소드</a></p>\n</li>\n<li>\n<p><a href=\"#line-%EC%9D%B4%EB%B2%A4%ED%8A%B8\">line 이벤트</a></p>\n</li>\n<li>\n<p><a href=\"#close-%EC%9D%B4%EB%B2%A4%ED%8A%B8\">close 이벤트</a></p>\n</li>\n<li>\n<p><a href=\"#rl-%EB%B3%80%EC%88%98\">rl 변수</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C-%ED%95%B4%EC%84%A4\">코드 해설</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"February 06, 2024","title":"문자열 출력하기","categories":"algorithm","author":"DHyeonJ","emoji":"🧑‍💻"},"fields":{"slug":"/algorithm/basis/day1/01-문자열 출력하기/"}},"site":{"siteMetadata":{"siteUrl":"https://dhyeonj.github.io","comments":{"utterances":{"repo":"DHyeonJ/DHyeonJ.github.io"}}}}},"pageContext":{"slug":"/react-camp-til/til-65day/","nextSlug":"/react-camp-til/til-64day/","prevSlug":"/algorithm/basis/day1/01-문자열 출력하기/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}